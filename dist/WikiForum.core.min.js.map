{"version":3,"sources":["webpack://mediawiki-wikiforum/./module/actionGet.js","webpack://mediawiki-wikiforum/./module/log.js","webpack://mediawiki-wikiforum/./module/mw.js","webpack://mediawiki-wikiforum/./module/parser.js","webpack://mediawiki-wikiforum/./module/renderer.js","webpack://mediawiki-wikiforum/./module/updater.js","webpack://mediawiki-wikiforum/webpack/bootstrap","webpack://mediawiki-wikiforum/./index.js"],"names":["require","api","conf","module","exports","page","wgPageName","$","get","format","action","prop","log","data","console","info","error","warn","err","mw","util","wikiScript","config","editToken","user","tokens","hook","parseForums","code","title","$root","forums","hasClass","find","each","index","forum","push","forumid","String","meta","extend","pageName","threads","parseThreads","prefix","$forum","$threads","getThreads","thread","threadObj","threadid","content","getContent","getMeta","length","html","fromApi","parse","wikitext","text","$wikitext","$html","Obj","window","WikiForum","cache","pages","fromHtml","$code","forumEl","actionGet","getThread","Number","split","item","_","id","renderAllForums","theme","allForumsContainer","append","ctx","_forum","forumMeta","forumContainer","renderThread","afterForum","fn","renderForum","afterAllForums","$thread","threadContainer","parser","updater","toPage","target","fire","toHtml","fromPage","then","timeStamp","Date","toISOString","addThread","userAuthor","wgUserName","userLast","timePublish","timeModify","handleEdit","addReply","findAndUpdate","base","allThreads","forumsNum","newReply","newThread","updateThread","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","loader","using","Core","renderer"],"mappings":"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","file":"WikiForum.core.min.js","sourcesContent":["const { api, conf } = require('./mw')\r\n\r\nmodule.exports = (page = conf.wgPageName) => {\r\n  return $.get(api, {\r\n    format: 'json',\r\n    action: 'parse',\r\n    prop: 'text|wikitext',\r\n    page,\r\n  })\r\n}\r\n","function log(...data) {\r\n  console.info('[WikiForum] [INFO]', ...data)\r\n}\r\n\r\nfunction warn(...data) {\r\n  console.warn('[WikiForum] [WARN]', ...data)\r\n}\r\n\r\nfunction error(...data) {\r\n  console.error('[WikiForum] [ERR]', ...data)\r\n}\r\n\r\nmodule.exports = {\r\n  log,\r\n  info: log,\r\n  warn,\r\n  error,\r\n  err: error,\r\n}\r\n","module.exports = {\r\n  api: mw.util.wikiScript('api'),\r\n  conf: mw.config.get(),\r\n  editToken: mw.user.tokens.get('editToken'),\r\n  hook: mw.hook,\r\n  util: mw.util,\r\n}\r\n","const { log } = require('./log')\r\n\r\n/**\r\n * @function parseForums 从源代码解析可能存在的全部主题\r\n * @param {Element} code\r\n * @param {String} title\r\n */\r\nfunction parseForums(code, title) {\r\n  var $root = $(code)\r\n  var forums = []\r\n\r\n  if (!$root.hasClass('wiki-forum')) {\r\n    $root = $root.find('.wiki-forum')\r\n  }\r\n\r\n  log('开始解析全论坛结构')\r\n\r\n  $root.each((index, forum) => {\r\n    log('单论坛结构', { index, forum })\r\n    forums.push({\r\n      forumid: String(index + 1),\r\n      meta: $.extend({}, $(forum).data(), { pageName: title }),\r\n      threads: parseThreads(forum),\r\n    })\r\n  })\r\n  return forums\r\n}\r\n\r\n/**\r\n * @function parseThreads 递归全部的帖子\r\n * @param {Element} forum\r\n * @param {String} prefix\r\n */\r\nfunction parseThreads(forum, prefix = '') {\r\n  var $forum = $(forum)\r\n  if (prefix) prefix += '-'\r\n  var threads = []\r\n  $threads = getThreads($forum)\r\n  $.each($threads, (index, thread) => {\r\n    var threadObj = {\r\n      threadid: String(prefix + (index + 1)),\r\n      content: getContent(thread),\r\n      meta: getMeta(thread),\r\n    }\r\n    if (getThreads(thread).length > 0) {\r\n      threadObj.threads = parseThreads(thread, threadObj.threadid)\r\n    }\r\n    threads.push(threadObj)\r\n  })\r\n  return threads\r\n}\r\n\r\n/**\r\n * @function getContent 获取帖子可能存在的回复的结构\r\n * @param {Element} thread\r\n */\r\nfunction getThreads(thread) {\r\n  var $thread = $(thread)\r\n  return $thread.find('> .forum-thread')\r\n}\r\n\r\n/**\r\n * @function getContent 获取帖子内容\r\n * @param {Element} thread\r\n */\r\nfunction getContent(thread) {\r\n  var $thread = $(thread)\r\n  var $content = $thread.find('> .forum-content').html() || ''\r\n  return $content\r\n}\r\n\r\n/**\r\n * @function getMeta 获取帖子的源信息\r\n * @param {Element} thread\r\n */\r\nfunction getMeta(thread) {\r\n  var $thread = $(thread)\r\n  var $data = $thread.data()\r\n\r\n  return $data\r\n}\r\n\r\n/**\r\n * @function getUser 获取帖子发帖者信息\r\n * @param {Element} thread\r\n */\r\nfunction getUser(thread) {\r\n  var $thread = $(thread)\r\n  var author = $thread.data('userAuthor') || ''\r\n  var last = $thread.data('userLast') || author\r\n  return { author, last }\r\n}\r\n\r\n/**\r\n * @function getTime 获取帖子发帖时间信息\r\n * @param {Element} thread\r\n */\r\nfunction getTime(thread) {\r\n  var $thread = $(thread)\r\n  var publish = $thread.data('timePublish') || ''\r\n  var modify = $thread.data('timeModify') || publish\r\n  return { publish, modify }\r\n}\r\n\r\n/**\r\n * @module fromApi 解析 MediaWiki API 返回的信息\r\n * @param {Object} data 来自 API 的结果：api.php?action=parse&prop=wikitext|text&page=<pageName>\r\n */\r\nfunction fromApi(data) {\r\n  log('从 API 结果解析论坛结构')\r\n\r\n  var title = data.parse.title\r\n  var wikitext = data.parse.wikitext['*']\r\n  var html = data.parse.text['*']\r\n\r\n  // 防止输出没有根元素\r\n  var $wikitext = $('<div>' + wikitext + '</div>')\r\n  var $html = $('<div>' + html + '</div>')\r\n\r\n  // 高版本输出自带根元素，低版本没有\r\n  if ($html.find('> .mw-parser-output').length > 0) {\r\n    $html = $html.find('> .mw-parser-output')\r\n  }\r\n\r\n  var Obj = {\r\n    wikitext: parseForums($wikitext, title),\r\n    html: parseForums($html, title),\r\n  }\r\n\r\n  // 缓存全部forum\r\n  window.WikiForum = window.WikiForum || {}\r\n  window.WikiForum.cache = window.WikiForum.cache || {}\r\n  window.WikiForum.cache.pages = window.WikiForum.cache.pages || {}\r\n  window.WikiForum.cache.pages[title] = Obj\r\n\r\n  log('从 API 结果解析完成', Obj)\r\n  return Obj\r\n}\r\n\r\n/**\r\n * @module fromHtml 从 HTML 源代码解析\r\n * @param {String|Element} code\r\n */\r\nfunction fromHtml(code, title = '') {\r\n  var $code = $(code)\r\n  var forumEl = parseForums($code)\r\n  log('从 HTML 源代码解析完成', forumEl)\r\n  return forumEl\r\n}\r\n\r\nmodule.exports = {\r\n  fromApi,\r\n  fromHtml,\r\n}\r\n","const { fromApi } = require('./parser')\r\nconst actionGet = require('./actionGet')\r\nconst { util, hook, conf } = require('./mw')\r\nconst { log, error } = require('./log')\r\n\r\n// 获取帖子元素\r\nfunction getThread({ forumEl, forumid = '1', threadid }) {\r\n  // 将 id 调整为程序可读的 index\r\n  forumid = Number(forumid)\r\n  forumid--\r\n  var forum = forumEl[forumid]\r\n\r\n  threadid = threadid.split('-')\r\n  $.each(threadid, (index, item) => {\r\n    item = Number(item)\r\n    item--\r\n    threadid[index] = item\r\n  })\r\n\r\n  // 开始递归 threads\r\n  var thread = forum\r\n  $.each(threadid, (_, id) => {\r\n    log('thread', thread.threads[id])\r\n    thread = thread.threads[id]\r\n  })\r\n\r\n  return thread\r\n}\r\n\r\n// 获取帖子内容\r\nfunction getContent(ctx) {\r\n  var thread = getThread(ctx)\r\n  return thread.content\r\n}\r\n\r\n// 获取帖子元信息\r\nfunction getMeta(ctx) {\r\n  var thread = getThread(ctx)\r\n  return thread.meta\r\n}\r\n\r\n// 递归全部主题\r\nfunction renderAllForums({ Obj, theme }) {\r\n  log('开始渲染全部论坛')\r\n  $root = theme.allForumsContainer()\r\n  const { html } = Obj\r\n\r\n  $.each(html, (index, forum) => {\r\n    log('递归渲染主题', `${index + 1}/${html.length}`)\r\n    $root.append(\r\n      renderForum({\r\n        _forum: Obj,\r\n        forumMeta: forum.meta,\r\n        forumid: forum.forumid,\r\n        forum,\r\n        theme,\r\n      }),\r\n      theme.afterAllForums ? theme.afterAllForums() : ''\r\n    )\r\n  })\r\n  return $root\r\n}\r\n\r\n// 渲染单个主题\r\nfunction renderForum(ctx) {\r\n  const { _forum, forum, forumMeta, forumid, theme } = ctx\r\n  log('渲染主题', { forumid })\r\n\r\n  var $root = theme.forumContainer({ meta: forumMeta })\r\n\r\n  $.each(forum.threads, (index, thread) => {\r\n    $root.append(\r\n      renderThread({\r\n        _forum,\r\n        theme,\r\n        thread,\r\n        forumMeta,\r\n        forumid,\r\n      })\r\n    )\r\n  })\r\n\r\n  if (theme.afterForum) {\r\n    $root.append(theme.afterForum({ _forum, forumMeta, forumid, fn }))\r\n  }\r\n\r\n  return $root\r\n}\r\n\r\n// 渲染单个帖子\r\nfunction renderThread(ctx) {\r\n  const { _forum, theme, thread, forumMeta, forumid } = ctx\r\n  const { content, meta, threadid } = thread\r\n\r\n  log('渲染贴子', { forumid, threadid })\r\n\r\n  // 缓存帖子对象\r\n  let $thread = theme.threadContainer({\r\n    _forum,\r\n    forumMeta,\r\n    forumid,\r\n    threadid,\r\n    meta,\r\n    content,\r\n    fn,\r\n  })\r\n\r\n  // 如果有回复，处理回复\r\n  if (thread.threads && thread.threads.length > 0) {\r\n    $.each(thread.threads, (index, thread) => {\r\n      ctx.thread = thread\r\n      $thread.append(renderThread(ctx))\r\n    })\r\n  }\r\n\r\n  return $thread\r\n}\r\n\r\nconst fn = {\r\n  parser: require('./parser'),\r\n  updater: require('./updater'),\r\n}\r\n\r\n// 从页面加载内容，并渲染到根元素\r\nfunction fromPage(page = conf.wgPageName, target = '#mw-content-text') {\r\n  log('从页面加载信息并渲染', { page, target })\r\n  actionGet(page).then(\r\n    data => {\r\n      log('成功从 API 获取源代码', page)\r\n      var Obj = fromApi(data)\r\n      toPage(Obj, target)\r\n    },\r\n    err => {\r\n      error('从 API 获取源代码失败', { page, err })\r\n    }\r\n  )\r\n}\r\n\r\n// 渲染返回HTML对象\r\nfunction toHtml(forumEl) {\r\n  log('渲染并返回 HTML')\r\n  mw.hook('WikiForum.theme').fire(theme => {\r\n    return renderAllForums({ forumEl, theme })\r\n  })\r\n}\r\n\r\n/**\r\n * @module toPage 从 WikiForum-Element 渲染到根元素\r\n * @param {Object} forumEl WikiForum-Element\r\n * @param {String|Element} target 渲染的根元素\r\n */\r\nfunction toPage(Obj, target = '#mw-content-text') {\r\n  log('准备渲染到页面，等待主题文件……')\r\n  /**\r\n   * 触发主题函数\r\n   * @param {Functon} theme 返回的主题渲染器\r\n   */\r\n  hook('WikiForum.theme').fire(theme => {\r\n    $(target).html(renderAllForums({ Obj, theme }))\r\n    log('页面渲染完毕')\r\n    hook('WikiForum.renderer').fire()\r\n  })\r\n}\r\n\r\nmodule.exports = {\r\n  toPage,\r\n  toHtml,\r\n  fromPage,\r\n  getContent,\r\n  getMeta,\r\n}\r\n","const { conf } = require('./mw')\r\nconst { log } = require('./log')\r\n\r\nfunction newThreadStruc({ meta, content, reply = '' }) {\r\n  // 将 fooBar 转换为 foo-bar 的形式\r\n  $.each(meta, (key, val) => {\r\n    let newKey = key.replace(/(.*)([A-Z])(.*)/g, '$1-$2$3').toLowerCase()\r\n    meta[newKey] = val\r\n    delete meta[key]\r\n  })\r\n\r\n  // meta 转换为字符串\r\n  var metaList = []\r\n  $.each(meta, (key, val) => {\r\n    metaList.push(`data-${key}=\"${val}\"`)\r\n  })\r\n  metaList = metaList.join(' ')\r\n\r\n  var html = `<!-- thread -->\r\n<div class=\"forum-thread\" ${metaList}>\r\n<div class=\"forum-content\"></div>${reply ? '\\n' + reply : ''}\r\n</div>\r\n<!-- /thread -->`\r\n\r\n  return html\r\n}\r\n\r\nfunction hasThread(thread, id) {\r\n  var res = false\r\n  if (thread.id === id) ret = true\r\n  return res\r\n}\r\n\r\nfunction isComplex() {}\r\n\r\nfunction makeWikitext(obj) {}\r\n\r\nfunction timeStamp() {\r\n  return new Date().toISOString()\r\n}\r\n\r\n/**\r\n * @function updateThread 编辑内容\r\n */\r\nfunction updateThread({ forumEl, forumid = '1', threadid, content }) {\r\n  const { wikitext } = forumEl\r\n  // 将 id 调整为程序可读的 index\r\n  forumid = Number(forumid)\r\n  forumid--\r\n  const forum = wikitext[forumid]\r\n\r\n  function findAndUpdate({ threadid, content }, base) {\r\n    var allThreads = base.threads\r\n    $.each(allThreads, (index, item) => {\r\n      if (item.threadid === threadid) {\r\n        item.content = content\r\n        item.meta.userLast = conf.wgUserName\r\n        item.meta.timeModify = timeStamp()\r\n      } else if (item.threads) {\r\n        findAndUpdate({ threadid, content }, item)\r\n      }\r\n    })\r\n  }\r\n\r\n  findAndUpdate({ threadid, content }, forum)\r\n\r\n  log('Update thread', { forumid, threadid, content })\r\n  handleEdit(wikitext)\r\n}\r\n\r\n/**\r\n * @function addThread 盖新楼，回复楼主\r\n */\r\nfunction addThread({ forumEl, forumid, content }) {\r\n  const { wikitext } = forumEl\r\n  forumid = Number(forumid)\r\n  forumid--\r\n\r\n  wikitext[forumid].threads.push({\r\n    meta: {\r\n      userAuthor: conf.wgUserName,\r\n      userLast: conf.wgUserName,\r\n      timePublish: timeStamp(),\r\n      timeModify: timeStamp(),\r\n    },\r\n    content,\r\n  })\r\n\r\n  log('Add thread', { forumid, content })\r\n\r\n  handleEdit(wikitext)\r\n}\r\n\r\n/**\r\n * @function addReply 新回复，回复层主\r\n */\r\nfunction addReply({ forumEl, forumid = '1', threadid, content }) {\r\n  const { wikitext } = forumEl\r\n  // 给楼主回复其实就是盖新楼\r\n  if (threadid === '1') {\r\n    return addThread({ forumEl, forumid, content })\r\n  }\r\n\r\n  forumid = Number(forumid)\r\n  forumid--\r\n\r\n  const forum = wikitext[forumid]\r\n\r\n  function findAndUpdate({ threadid, content }, base) {\r\n    var allThreads = base.threads\r\n    $.each(allThreads, (index, item) => {\r\n      if (item.threadid === threadid) {\r\n        item.threads = item.threads || []\r\n        item.threads.push({\r\n          meta: {\r\n            userAuthor: conf.wgUserName,\r\n            userLast: conf.wgUserName,\r\n            timePublish: timeStamp(),\r\n            timeModify: timeStamp(),\r\n          },\r\n          content,\r\n        })\r\n      } else if (item.threads) {\r\n        findAndUpdate({ threadid, content }, item)\r\n      }\r\n    })\r\n  }\r\n\r\n  findAndUpdate({ threadid, content }, forum)\r\n\r\n  log('Add reply', { forumid, threadid, content })\r\n\r\n  handleEdit(wikitext)\r\n}\r\n\r\n/**\r\n * @function handleEdit 将forumEl转换为wikitext并发布\r\n * @param {Object} forumEl\r\n */\r\nfunction handleEdit(forumEl) {\r\n  log('Make edit', forumEl, {\r\n    pageName: forumEl[0].meta.pageName,\r\n    forumsNum: forumEl.length,\r\n  })\r\n}\r\n\r\nmodule.exports = {\r\n  addReply,\r\n  newReply: addReply,\r\n  addThread,\r\n  newThread: addThread,\r\n  updateThread,\r\n  // deleteThread,\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\r\n * @name WikiForum.core\r\n * @author 机智的小鱼君 <dragon-fish@qq.com>\r\n * @url https://github.com/Wjghj-Project/Gadget-WikiForum\r\n */\r\n'use strict'\r\n\r\nconst log = require('./module/log')\r\nconst { hook } = require('./module/mw')\r\n\r\nmw.loader.using(\r\n  ['mediawiki.api', 'mediawiki.util', 'mediawiki.user'],\r\n  function() {\r\n    // init global variable\r\n    const Core = {\r\n      parser: require('./module/parser'),\r\n      renderer: require('./module/renderer'),\r\n      updater: require('./module/updater'),\r\n    }\r\n\r\n    window.WikiForum = $.extend({}, window.WikiForum, Core)\r\n    hook('WikiForum').fire(Core)\r\n    log.log('Ready!')\r\n  }\r\n)\r\n"],"sourceRoot":""}