{"version":3,"sources":["webpack://mediawiki-wikiforum/./src/module/actionEdit.js","webpack://mediawiki-wikiforum/./src/module/actionGet.js","webpack://mediawiki-wikiforum/./src/module/log.js","webpack://mediawiki-wikiforum/./src/module/mw.js","webpack://mediawiki-wikiforum/./src/module/parser.js","webpack://mediawiki-wikiforum/./src/module/renderer.js","webpack://mediawiki-wikiforum/./src/module/updater.js","webpack://mediawiki-wikiforum/webpack/bootstrap","webpack://mediawiki-wikiforum/./src/index.js"],"names":["require","api","editToken","module","exports","title","text","summary","$","post","format","action","token","conf","page","wgPageName","get","prop","disabletoc","disableeditsection","log","data","console","info","error","warn","err","mw","util","wikiScript","config","user","tokens","hook","parseForums","code","$root","forums","hasClass","find","each","index","forum","push","forumid","String","meta","extend","pageName","threads","parseThreads","prefix","$forum","$threads","getThreads","thread","threadObj","threadid","content","getContent","getMeta","length","html","trim","replace","fromApi","parse","wikitext","$wikitext","$html","Obj","window","WikiForum","cache","pages","fromHtml","actionGet","getThread","forumEl","Number","split","item","_","id","renderAllForums","theme","$allForums","allForumsContainer","noForumContainer","append","ctx","$container","_forum","forumMeta","forumContainer","renderThread","afterForum","fn","renderForum","afterAllForums","$thread","threadContainer","parser","updater","toPage","target","fire","toHtml","fromPage","then","actionEdit","contentValidator","str","openTable","match","closeTable","i","div","document","createElement","innerHTML","handleEdit","metaList","threadList","parseThread","parseForum","timeStamp","wgUserName","parseAllForums","ret","errors","indent","indentStr","reply","key","val","newKey","toLowerCase","metaList1","Object","keys","sort","join","Date","toISOString","addThread","userAuthor","userLast","timePublish","timeModify","addReply","findAndUpdate","base","allThreads","newReply","newThread","updateThread","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","loader","using","Core","renderer"],"mappings":";uCAAA,MAA2BA,EAAQ,KAA3BC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,UAEbC,EAAOC,QAAU,YAA8B,IAA3BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC/B,OAAOC,EAAEC,KAAKR,EAAK,CACjBS,OAAQ,OACRC,OAAQ,OACRC,MAAOV,EACPG,QACAC,OACAC,c,oBCTJ,MAAsBP,EAAQ,KAAtBC,EAAR,EAAQA,IAAKY,EAAb,EAAaA,KAEbV,EAAOC,QAAU,WAA4B,IAA3BU,EAA2B,uDAApBD,EAAKE,WAC5B,OAAOP,EAAEQ,IAAIf,EAAK,CAChBS,OAAQ,OACRC,OAAQ,QACRM,KAAM,gBACNC,WAAY,EACZC,mBAAoB,EACpBL,W,gBCTJ,SAASM,IAAa,6BAANC,EAAM,yBAANA,EAAM,iBACpB,EAAAC,SAAQC,KAAR,SAAa,sBAAb,OAAsCF,IAOxC,SAASG,IAAe,6BAANH,EAAM,yBAANA,EAAM,iBACtB,EAAAC,SAAQE,MAAR,SAAc,qBAAd,OAAsCH,IAGxClB,EAAOC,QAAU,CACfgB,MACAG,KAAMH,EACNK,KAXF,WAAuB,6BAANJ,EAAM,yBAANA,EAAM,iBACrB,EAAAC,SAAQG,KAAR,SAAa,sBAAb,OAAsCJ,KAWtCG,QACAE,IAAKF,I,gBCjBPrB,EAAOC,QAAU,CACfH,IAAK0B,GAAGC,KAAKC,WAAW,OACxBhB,KAAMc,GAAGG,OAAOd,MAChBd,UAAWyB,GAAGI,KAAKC,OAAOhB,IAAI,cAAgBW,GAAGI,KAAKC,OAAOhB,IAAI,aACjEiB,KAAMN,GAAGM,KACTL,KAAMD,GAAGC,O,gBCAX,SAASM,EAAYC,EAAM9B,GACzB,IAAI+B,EAAQ5B,EAAE2B,GACVE,EAAS,GAab,OAXKD,EAAME,SAAS,gBAClBF,EAAQA,EAAMG,KAAK,gBAGrBH,EAAMI,MAAK,SAACC,EAAOC,GACjBL,EAAOM,KAAK,CACVC,QAASC,OAAOJ,EAAQ,GACxBK,KAAMtC,EAAEuC,OAAO,GAAIvC,EAAEkC,GAAOrB,OAAQ,CAAE2B,SAAU3C,IAChD4C,QAASC,EAAaR,QAGnBL,EAQT,SAASa,EAAaR,GAAoB,IAAbS,EAAa,uDAAJ,GAChCC,EAAS5C,EAAEkC,GACXS,IAAQA,GAAU,KACtB,IAAIF,EAAU,GACVI,EAAWC,EAAWF,GAY1B,OAXA5C,EAAEgC,KAAKa,GAAU,SAACZ,EAAOc,GACvB,IAAIC,EAAY,CACdC,SAAUZ,OAAOM,GAAUV,EAAQ,IACnCiB,QAASC,EAAWJ,GACpBT,KAAMc,EAAQL,IAEZD,EAAWC,GAAQM,OAAS,IAC9BL,EAAUP,QAAUC,EAAaK,EAAQC,EAAUC,WAErDR,EAAQN,KAAKa,MAERP,EAOT,SAASK,EAAWC,GAElB,OADc/C,EAAE+C,GACDhB,KAAK,mBAOtB,SAASoB,EAAWJ,GAClB,IACIG,EADUlD,EAAE+C,GACMhB,KAAK,oBAAoBuB,QAAU,GAQzD,OAPAJ,EAAUA,EACPK,OACAC,QAAQ,mCAAoC,IAC5CA,QAAQ,iCAAkC,IAC1CA,QAAQ,MAAO,IACfA,QAAQ,MAAO,IASpB,SAASJ,EAAQL,GAIf,OAHc/C,EAAE+C,GACIlC,OA+CtBlB,EAAOC,QAAU,CACf6D,QAvCF,SAAiB5C,GACf,IAAIhB,EAAQgB,EAAK6C,MAAM7D,MACnB8D,EAAW9C,EAAK6C,MAAMC,SAAS,KAC/BL,EAAOzC,EAAK6C,MAAM5D,KAAK,KAGvB8D,EAAY5D,EAAE,QAAU2D,EAAW,UACnCE,EAAQ7D,EAAE,QAAUsD,EAAO,UAG3BO,EAAM9B,KAAK,uBAAuBsB,OAAS,IAC7CQ,EAAQA,EAAM9B,KAAK,wBAGrB,IAAI+B,EAAM,CACRH,SAAUjC,EAAYkC,EAAW/D,GACjCyD,KAAM5B,EAAYmC,EAAOhE,IAS3B,OALAkE,OAAOC,UAAYD,OAAOC,WAAa,GACvCD,OAAOC,UAAUC,MAAQF,OAAOC,UAAUC,OAAS,GACnDF,OAAOC,UAAUC,MAAMC,MAAQH,OAAOC,UAAUC,MAAMC,OAAS,GAC/DH,OAAOC,UAAUC,MAAMC,MAAMrE,GAASiE,EAE/BA,GAePK,SARF,SAAkBxC,GAGhB,OADcD,EADF1B,EAAE2B,O,oBCzHhB,IAAQ8B,EAAYjE,EAAQ,KAApBiE,QACFW,EAAY5E,EAAQ,KAC1B,EAAuBA,EAAQ,KAAvBiC,EAAR,EAAQA,KAAMpB,EAAd,EAAcA,KACd,EAAuBb,EAAQ,KAAvBoB,EAAR,EAAQA,IAAKI,EAAb,EAAaA,MAGb,SAASqD,EAAT,GAAyD,IAApCC,EAAoC,EAApCA,QAAoC,IAA3BlC,eAA2B,MAAjB,IAAiB,EAAZa,EAAY,EAAZA,SAE3Cb,EAAUmC,OAAOnC,GAEjB,IAAIF,EAAQoC,IADZlC,GAGAa,EAAWA,EAASuB,MAAM,KAC1BxE,EAAEgC,KAAKiB,GAAU,SAAChB,EAAOwC,GACvBA,EAAOF,OAAOE,GACdA,IACAxB,EAAShB,GAASwC,KAIpB,IAAI1B,EAASb,EAMb,OALAlC,EAAEgC,KAAKiB,GAAU,SAACyB,EAAGC,GACnB/D,EAAI,SAAUmC,EAAON,QAAQkC,IAC7B5B,EAASA,EAAON,QAAQkC,MAGnB5B,EAgBT,SAAS6B,EAAT,GAAoD,IAAzBN,EAAyB,EAAzBA,QAASO,EAAgB,EAAhBA,MAAOjD,EAAS,EAATA,MACzChB,EAAI,YACJ,IAAQ0C,EAASgB,EAAThB,KACJwB,EAAaD,EAAME,qBA8BvB,OA5BIzB,EAAKD,OAAS,EACZwB,EAAMG,kBACRF,EAAWG,OAAOJ,EAAMG,oBAG1BhF,EAAEgC,KAAKsB,GAAM,SAACrB,EAAOC,GACnBtB,EAAI,SAAD,UAAcqB,EAAQ,EAAtB,YAA2BqB,EAAKD,SACnCyB,EAAWG,OAyBjB,SAAqBC,GACnB,IAAQtD,EAAgEsD,EAAhEtD,MAAOuD,EAAyDD,EAAzDC,WAAYC,EAA6CF,EAA7CE,OAAQlD,EAAqCgD,EAArChD,MAAOmD,EAA8BH,EAA9BG,UAAWjD,EAAmB8C,EAAnB9C,QAASyC,EAAUK,EAAVL,MAE1DjC,EAASiC,EAAMS,eAAe,CAAEhD,KAAM+C,IAE1CrF,EAAEgC,KAAKE,EAAMO,SAAS,SAACR,EAAOc,GAC5BH,EAAOqC,OACLM,EAAa,CACX3D,QACAuD,WAAYvC,EACZwC,SACAP,QACA9B,SACAsC,YACAjD,gBAKFyC,EAAMW,YACR5C,EAAOqC,OACLJ,EAAMW,WAAW,CACf5D,QACAuD,aACAC,SACAC,YACAjD,UACAqD,QAKN,OAAO7C,EAxDD8C,CAAY,CACV9D,QACAwD,OAAQd,EACRe,UAAWnD,EAAMI,KACjBF,QAASF,EAAME,QACfF,QACA2C,UAEFA,aATF,EASEA,EAAOc,eAAe,CACpB/D,QACAuD,WAAYL,EACZM,OAAQd,EACRe,UAAWnD,EAAMI,KACjBF,QAASF,EAAME,QACfqD,WAMDX,EAwCT,SAASS,EAAaL,GACpB,IAAQtD,EAAiEsD,EAAjEtD,MAAOuD,EAA0DD,EAA1DC,WAAYC,EAA8CF,EAA9CE,OAAQP,EAAsCK,EAAtCL,MAAO9B,EAA+BmC,EAA/BnC,OAAQsC,EAAuBH,EAAvBG,UAAWjD,EAAY8C,EAAZ9C,QACrDc,EAA4BH,EAA5BG,QAASZ,EAAmBS,EAAnBT,KAAMW,EAAaF,EAAbE,SAEvBrC,EAAI,OAAQ,CAAEwB,UAASa,aAGvB,IAAI2C,EAAUf,EAAMgB,gBAAgB,CAClCjE,QACAuD,aACAC,SACAC,YACAjD,UACAa,WACAX,OACAY,UACAuC,OAWF,OAPI1C,EAAON,SAAWM,EAAON,QAAQY,OAAS,GAC5CrD,EAAEgC,KAAKe,EAAON,SAAS,SAACR,EAAOc,GAC7BmC,EAAInC,OAASA,EACb6C,EAAQX,OAAOM,EAAaL,OAIzBU,EAGT,IAAMH,EAAK,CACTK,OAAQtG,EAAQ,KAChBuG,QAASvG,EAAQ,MA8BnB,SAASwG,EAAT,GAA0D,IAAxC1B,EAAwC,EAAxCA,QAAwC,IAA/B2B,cAA+B,MAAtB,mBAAsB,EACxDrF,EAAI,oBAKJa,EAAK,mBAAmByE,MAAK,SAACrB,GAC5B,IAAMjD,EAAQ5B,EAAEiG,GAChBrE,EAAM0B,KAAKsB,EAAgB,CAAEN,UAASO,QAAOjD,WAC7ChB,EAAI,UACJa,EAAK,sBAAsByE,UAI/BvG,EAAOC,QAAU,CACfoG,SACAG,OA5BF,SAAgB7B,GACd1D,EAAI,cACJO,GAAGM,KAAK,mBAAmByE,MAAK,SAACrB,GAC/B,OAAOD,EAAgB,CAAEN,UAASO,cA0BpCuB,SA3CF,WAAuE,IAArD9F,EAAqD,uDAA9CD,EAAKE,WAAY0F,EAA6B,uDAApB,mBACjD7B,EAAU9D,GAAM+F,MACd,SAACxF,GACCD,EAAI,gBAAiBN,GAErB0F,EAAO,CAAE1B,QADKb,EAAQ5C,GACJoF,cAEpB,SAAC/E,GACCF,EAAM,gBAAiB,CAAEV,OAAMY,YAoCnCiC,WArKF,SAAoB+B,GAElB,OADab,EAAUa,GACThC,SAoKdE,QAhKF,SAAiB8B,GAEf,OADab,EAAUa,GACT5C,Q,wiCCtChB,IAAQjC,EAASb,EAAQ,KAAjBa,KACR,EAAuBb,EAAQ,KAAvBoB,EAAR,EAAQA,IAAKI,EAAb,EAAaA,MACPsF,EAAa9G,EAAQ,KAc3B,SAAS+G,EAAiBC,GAKxB,IAHA,IAAIC,GAAaD,EAAIE,MAAM,UAAY,IAAIrD,OACvCsD,GAAcH,EAAIE,MAAM,YAAc,IAAIrD,OAErCuD,EAAI,EAAGA,EAAIH,EAAYE,EAAYC,IAC1CJ,GAAO,OAIT,IAAMK,EAAMC,SAASC,cAAc,aAGnC,OAFAF,EAAIG,UAAYR,EAChBA,EAAMK,EAAIG,UAQZ,SAASC,EAAT,GAAiD,IAA3BrF,EAA2B,EAA3BA,MAAO0C,EAAoB,EAApBA,QAASvE,EAAW,EAAXA,QAC9ByC,EAAW8B,EAAQ,GAAGhC,KAAKE,SAC3BmB,EAuBR,SAAwBW,GACtB,IAAIhB,EAAO,GAkBX,OAjBAtD,EAAEgC,KAAKsC,GAAS,SAACrC,EAAOC,GACtBoB,GAmBJ,SAAoBpB,GAClB,IAAQE,EAA2BF,EAA3BE,QAASE,EAAkBJ,EAAlBI,KAAMG,EAAYP,EAAZO,QACjByE,EAAW9D,EAAQd,GAErB6E,EAAa,GAYjB,OAXAnH,EAAEgC,KAAKS,GAAS,SAACR,EAAOc,GACtBoE,GAAcC,EAAYrE,MAGf,yBAAH,OACOX,GAAW,SADlB,4CAEc8E,EAFd,cAGVC,EAHU,uCAKK/E,GAAW,SALhB,WA5BAiF,CAAWnF,MAGrBoB,EAAO,0DAAH,OAGagB,EAAQjB,OAHrB,gCAIeiE,IAJf,2BAKUjH,EAAKkH,WALf,mDASJjE,EATI,oCA7BakE,CAAelD,GAEhCgC,EAAW,CACTzG,MAAO2C,EACP1C,KAAM6D,EACN5D,YACCsG,MACD,SAAAoB,GACMA,EAAIzG,OAASyG,EAAIC,OACnB1G,EAAMyG,EAAIzG,OAASyG,EAAIC,SAGzB9G,EAAI,SAAU6G,IAEdrB,EADqB5G,EAAQ,KAArB4G,UACC5D,EAAUZ,OAErB,SAAAV,GAAG,OAAIF,EAAME,MAgDjB,SAASkG,EAAYrE,GAKnB,IALuC,IAAZ4E,EAAY,uDAAH,EAC5B1E,EAAqCF,EAArCE,SAAUX,EAA2BS,EAA3BT,KAAMG,EAAqBM,EAArBN,QAASS,EAAYH,EAAZG,QAC3BgE,EAAW9D,EAAQd,GAErBsF,EAAY,GACPhB,EAAI,EAAGA,EAAIe,EAAQf,IAAKgB,GAAa,KAE9C,IAAIC,EAAQ,GACRpF,GAAWA,EAAQY,OAAS,GAC9BrD,EAAEgC,KAAKS,GAAS,SAACR,EAAOc,GACtB8E,GAAST,EAAYrE,EAAQ4E,EAAS,MAI1C,IAAIrE,EAAO,KAAH,OACRsE,EADQ,gCACsB3E,GAAY,SADlC,oBAER2E,EAFQ,oCAE6BV,EAF7B,cAGRU,EAHQ,uEAKRrB,EAAiBrD,GALT,yCAOR0E,EAPQ,kBAOWC,EAPX,aAQRD,EARQ,kBASRA,EATQ,8BASoB3E,GAAY,SAThC,aAYR,OAAOK,EAOT,SAASF,EAAQd,GAEf,IAAI4E,EAAW,GAEflH,EAAEgC,KAAKM,GAAM,SAACwF,EAAKC,GACjB,IAAIC,EACF,QAAUF,EAAItE,QAAQ,mBAAoB,WAAWyE,cACvDf,EAAS/E,KAAT,UAAiB6F,EAAjB,aAA4BD,EAA5B,SAIF,IAXqB,EAWjBG,EAAY,GAXK,IAYFC,OAAOC,KAAK9F,GAAM+F,QAZhB,IAarB,2BAA8B,KAArBP,EAAqB,QAC5BI,EAAUJ,GAAOZ,EAASY,IAdP,8BAoBrB,OAFAZ,GAFAA,EAAWgB,GAESI,KAAK,KAK3B,SAAShB,IACP,OAAO,IAAIiB,MAAOC,cA0DpB,SAASC,EAAT,GAAyD,IAApCnE,EAAoC,EAApCA,QAASlC,EAA2B,EAA3BA,QAASc,EAAkB,EAAlBA,QAAStB,EAAS,EAATA,MACtC+B,EAAaW,EAAbX,SACRvB,EAAUmC,OAAOnC,GAGjBuB,IAFAvB,GAEkBK,QAAQN,KAAK,CAC7BG,KAAM,CACJoG,WAAYrI,EAAKkH,WACjBoB,SAAUtI,EAAKkH,WACfqB,YAAatB,IACbuB,WAAYvB,KAEdpE,YAGFtC,EAAI,aAAc,CAAEwB,UAASc,YAE7B+D,EAAW,CACTrF,QACA0C,QAASX,EACT5D,QAAS,mCAAF,OAAqCqC,KAOhD,SAAS0G,EAAT,GAAwE,IAApDxE,EAAoD,EAApDA,QAAoD,IAA3ClC,eAA2C,MAAjC,IAAiC,EAA5Ba,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,QAAStB,EAAS,EAATA,MACrD+B,EAAaW,EAAbX,SAER,GAAiB,MAAbV,EACF,OAAOwF,EAAU,CAAEnE,UAASlC,UAASc,YAGvCd,EAAUmC,OAAOnC,GAKjB,SAAS2G,EAAT,EAA8CC,GAAM,IAA3B/F,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,QAC7B+F,EAAaD,EAAKvG,QACtBzC,EAAEgC,KAAKiH,GAAY,SAAChH,EAAOwC,GACrBA,EAAKxB,WAAaA,GACpBwB,EAAKhC,QAAUgC,EAAKhC,SAAW,GAC/BgC,EAAKhC,QAAQN,KAAK,CAChBG,KAAM,CACJoG,WAAYrI,EAAKkH,WACjBoB,SAAUtI,EAAKkH,WACfqB,YAAatB,IACbuB,WAAYvB,KAEdpE,aAEOuB,EAAKhC,SACdsG,EAAc,CAAE9F,WAAUC,WAAWuB,MAK3CsE,CAAc,CAAE9F,WAAUC,WAtBZS,IAFdvB,IA0BAxB,EAAI,YAAa,CAAEwB,UAASa,WAAUC,YAEtC+D,EAAW,CACTrF,QACA0C,QAASX,EACT5D,QAAS,kCAAF,OAAoCqC,EAApC,qBAAwDa,KAInEtD,EAAOC,QAAU,CACfkJ,WACAI,SAAUJ,EACVL,YACAU,UAAWV,EACXW,aAxHF,YAOG,IAND9E,EAMC,EANDA,QAMC,IALDlC,eAKC,MALS,IAKT,EAJDa,EAIC,EAJDA,SACAC,EAGC,EAHDA,QAGC,IAFDZ,YAEC,MAFM,GAEN,EADDV,EACC,EADDA,MAEQ+B,EAAaW,EAAbX,SAERvB,EAAUmC,OAAOnC,GAIjB,SAAS2G,EAAT,EAAyDC,GAAM,IAAtC/F,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,QAA4B,IAAnBZ,YAAmB,MAAZ,GAAY,EACzD2G,EAAaD,EAAKvG,QACtBzC,EAAEgC,KAAKiH,GAAY,SAAChH,EAAOwC,GACrBA,EAAKxB,WAAaA,GAChBC,IACFuB,EAAKvB,QAAUA,EACfuB,EAAKnC,KAAKqG,SAAWtI,EAAKkH,WAC1B9C,EAAKnC,KAAKuG,WAAavB,KAErBhF,IACFmC,EAAKnC,KAAOtC,EAAEuC,OAAO,GAAIkC,EAAKnC,KAAMA,KAE7BmC,EAAKhC,SACdsG,EAAc,CAAE9F,WAAUC,WAAWuB,MAK3CsE,CAAc,CAAE9F,WAAUX,OAAMY,WApBlBS,IADdvB,IAuBAxB,EAAI,gBAAiB,CAAEwB,UAASa,WAAUC,YAC1C+D,EAAW,CACTrF,QACA0C,QAASX,EACT5D,QAAS,4BAAF,OAA8BqC,EAA9B,qBAAkDa,SCjNzDoG,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAa5J,QAGrB,IAAID,EAAS0J,EAAyBE,GAAY,CAGjD3J,QAAS,IAOV,OAHA8J,EAAoBH,GAAU5J,EAAQA,EAAOC,QAAS0J,GAG/C3J,EAAOC,S,wBCdf,IAAMgB,EAAMpB,EAAQ,KACZiC,EAASjC,EAAQ,KAAjBiC,KAERN,GAAGwI,OAAOC,MACR,CAAC,gBAAiB,iBAAkB,mBACpC,WAEE,IAAMC,EAAO,CACX/D,OAAQtG,EAAQ,KAChBsK,SAAUtK,EAAQ,KAClBuG,QAASvG,EAAQ,MAGnBuE,OAAOC,UAAYhE,EAAEuC,OAAO,GAAIwB,OAAOC,UAAW6F,GAClDpI,EAAK,aAAayE,KAAK2D,GACvBjJ,EAAIA,IAAI,a","file":"core.min.js","sourcesContent":["const { api, editToken } = require('./mw')\r\n\r\nmodule.exports = ({ title, text, summary }) => {\r\n  return $.post(api, {\r\n    format: 'json',\r\n    action: 'edit',\r\n    token: editToken,\r\n    title,\r\n    text,\r\n    summary,\r\n  })\r\n}\r\n","const { api, conf } = require('./mw')\r\n\r\nmodule.exports = (page = conf.wgPageName) => {\r\n  return $.get(api, {\r\n    format: 'json',\r\n    action: 'parse',\r\n    prop: 'text|wikitext',\r\n    disabletoc: 1,\r\n    disableeditsection: 1,\r\n    page,\r\n  })\r\n}\r\n","function log(...data) {\r\n  console.info('[WikiForum] [INFO]', ...data)\r\n}\r\n\r\nfunction warn(...data) {\r\n  console.warn('[WikiForum] [WARN]', ...data)\r\n}\r\n\r\nfunction error(...data) {\r\n  console.error('[WikiForum] [ERR]', ...data)\r\n}\r\n\r\nmodule.exports = {\r\n  log,\r\n  info: log,\r\n  warn,\r\n  error,\r\n  err: error,\r\n}\r\n","module.exports = {\r\n  api: mw.util.wikiScript('api'),\r\n  conf: mw.config.get(),\r\n  editToken: mw.user.tokens.get('csrfToken') || mw.user.tokens.get('editToken'),\r\n  hook: mw.hook,\r\n  util: mw.util,\r\n}\r\n","/**\r\n * @function parseForums 从源代码解析可能存在的全部主题\r\n * @param {Element} code\r\n * @param {String} title\r\n */\r\nfunction parseForums(code, title) {\r\n  var $root = $(code)\r\n  var forums = []\r\n\r\n  if (!$root.hasClass('wiki-forum')) {\r\n    $root = $root.find('.wiki-forum')\r\n  }\r\n\r\n  $root.each((index, forum) => {\r\n    forums.push({\r\n      forumid: String(index + 1),\r\n      meta: $.extend({}, $(forum).data(), { pageName: title }),\r\n      threads: parseThreads(forum),\r\n    })\r\n  })\r\n  return forums\r\n}\r\n\r\n/**\r\n * @function parseThreads 递归全部的帖子\r\n * @param {Element} forum\r\n * @param {String} prefix\r\n */\r\nfunction parseThreads(forum, prefix = '') {\r\n  var $forum = $(forum)\r\n  if (prefix) prefix += '-'\r\n  let threads = []\r\n  let $threads = getThreads($forum)\r\n  $.each($threads, (index, thread) => {\r\n    var threadObj = {\r\n      threadid: String(prefix + (index + 1)),\r\n      content: getContent(thread),\r\n      meta: getMeta(thread),\r\n    }\r\n    if (getThreads(thread).length > 0) {\r\n      threadObj.threads = parseThreads(thread, threadObj.threadid)\r\n    }\r\n    threads.push(threadObj)\r\n  })\r\n  return threads\r\n}\r\n\r\n/**\r\n * @function getContent 获取帖子可能存在的回复的结构\r\n * @param {Element} thread\r\n */\r\nfunction getThreads(thread) {\r\n  var $thread = $(thread)\r\n  return $thread.find('> .forum-thread')\r\n}\r\n\r\n/**\r\n * @function getContent 获取帖子内容\r\n * @param {Element} thread\r\n */\r\nfunction getContent(thread) {\r\n  var $thread = $(thread)\r\n  var content = $thread.find('> .forum-content').html() || ''\r\n  content = content\r\n    .trim()\r\n    .replace(/^<!--\\s*?start\\s+?content\\s*?-->/, '')\r\n    .replace(/<!--\\s*?end\\s+?content\\s*?-->$/, '')\r\n    .replace(/^\\n/, '')\r\n    .replace(/\\n$/, '')\r\n\r\n  return content\r\n}\r\n\r\n/**\r\n * @function getMeta 获取帖子的源信息\r\n * @param {Element} thread\r\n */\r\nfunction getMeta(thread) {\r\n  var $thread = $(thread)\r\n  var $data = $thread.data()\r\n\r\n  return $data\r\n}\r\n\r\n/**\r\n * @module fromApi 解析 MediaWiki API 返回的信息\r\n * @param {Object} data 来自 API 的结果：api.php?action=parse&prop=wikitext|text&page=<pageName>\r\n */\r\nfunction fromApi(data) {\r\n  var title = data.parse.title\r\n  var wikitext = data.parse.wikitext['*']\r\n  var html = data.parse.text['*']\r\n\r\n  // 防止输出没有根元素\r\n  var $wikitext = $('<div>' + wikitext + '</div>')\r\n  var $html = $('<div>' + html + '</div>')\r\n\r\n  // 高版本输出自带根元素，低版本没有\r\n  if ($html.find('> .mw-parser-output').length > 0) {\r\n    $html = $html.find('> .mw-parser-output')\r\n  }\r\n\r\n  var Obj = {\r\n    wikitext: parseForums($wikitext, title),\r\n    html: parseForums($html, title),\r\n  }\r\n\r\n  // 缓存全部forum\r\n  window.WikiForum = window.WikiForum || {}\r\n  window.WikiForum.cache = window.WikiForum.cache || {}\r\n  window.WikiForum.cache.pages = window.WikiForum.cache.pages || {}\r\n  window.WikiForum.cache.pages[title] = Obj\r\n\r\n  return Obj\r\n}\r\n\r\n/**\r\n * @module fromHtml 从 HTML 源代码解析\r\n * @param {String|Element} code\r\n */\r\nfunction fromHtml(code) {\r\n  var $code = $(code)\r\n  var forumEl = parseForums($code)\r\n  return forumEl\r\n}\r\n\r\nmodule.exports = {\r\n  fromApi,\r\n  fromHtml,\r\n}\r\n","const { fromApi } = require('./parser')\r\nconst actionGet = require('./actionGet')\r\nconst { hook, conf } = require('./mw')\r\nconst { log, error } = require('./log')\r\n\r\n// 获取帖子元素\r\nfunction getThread({ forumEl, forumid = '1', threadid }) {\r\n  // 将 id 调整为程序可读的 index\r\n  forumid = Number(forumid)\r\n  forumid--\r\n  var forum = forumEl[forumid]\r\n\r\n  threadid = threadid.split('-')\r\n  $.each(threadid, (index, item) => {\r\n    item = Number(item)\r\n    item--\r\n    threadid[index] = item\r\n  })\r\n\r\n  // 开始递归 threads\r\n  var thread = forum\r\n  $.each(threadid, (_, id) => {\r\n    log('thread', thread.threads[id])\r\n    thread = thread.threads[id]\r\n  })\r\n\r\n  return thread\r\n}\r\n\r\n// 获取帖子内容\r\nfunction getContent(ctx) {\r\n  var thread = getThread(ctx)\r\n  return thread.content\r\n}\r\n\r\n// 获取帖子元信息\r\nfunction getMeta(ctx) {\r\n  var thread = getThread(ctx)\r\n  return thread.meta\r\n}\r\n\r\n// 递归全部主题\r\nfunction renderAllForums({ forumEl, theme, $root }) {\r\n  log('开始渲染全部论坛')\r\n  const { html } = forumEl\r\n  let $allForums = theme.allForumsContainer()\r\n\r\n  if (html.length < 1) {\r\n    if (theme.noForumContainer) {\r\n      $allForums.append(theme.noForumContainer())\r\n    }\r\n  } else {\r\n    $.each(html, (index, forum) => {\r\n      log('递归渲染主题', `${index + 1}/${html.length}`)\r\n      $allForums.append(\r\n        renderForum({\r\n          $root,\r\n          _forum: forumEl,\r\n          forumMeta: forum.meta,\r\n          forumid: forum.forumid,\r\n          forum,\r\n          theme,\r\n        }),\r\n        theme?.afterAllForums({\r\n          $root,\r\n          $container: $allForums,\r\n          _forum: forumEl,\r\n          forumMeta: forum.meta,\r\n          forumid: forum.forumid,\r\n          fn,\r\n        })\r\n      )\r\n    })\r\n  }\r\n\r\n  return $allForums\r\n}\r\n\r\n// 渲染单个主题\r\nfunction renderForum(ctx) {\r\n  const { $root, $container, _forum, forum, forumMeta, forumid, theme } = ctx\r\n\r\n  let $forum = theme.forumContainer({ meta: forumMeta })\r\n\r\n  $.each(forum.threads, (index, thread) => {\r\n    $forum.append(\r\n      renderThread({\r\n        $root,\r\n        $container: $forum,\r\n        _forum,\r\n        theme,\r\n        thread,\r\n        forumMeta,\r\n        forumid,\r\n      })\r\n    )\r\n  })\r\n\r\n  if (theme.afterForum) {\r\n    $forum.append(\r\n      theme.afterForum({\r\n        $root,\r\n        $container,\r\n        _forum,\r\n        forumMeta,\r\n        forumid,\r\n        fn,\r\n      })\r\n    )\r\n  }\r\n\r\n  return $forum\r\n}\r\n\r\n// 渲染单个帖子\r\nfunction renderThread(ctx) {\r\n  const { $root, $container, _forum, theme, thread, forumMeta, forumid } = ctx\r\n  const { content, meta, threadid } = thread\r\n\r\n  log('渲染贴子', { forumid, threadid })\r\n\r\n  // 缓存帖子对象\r\n  let $thread = theme.threadContainer({\r\n    $root,\r\n    $container,\r\n    _forum,\r\n    forumMeta,\r\n    forumid,\r\n    threadid,\r\n    meta,\r\n    content,\r\n    fn,\r\n  })\r\n\r\n  // 如果有回复，处理回复\r\n  if (thread.threads && thread.threads.length > 0) {\r\n    $.each(thread.threads, (index, thread) => {\r\n      ctx.thread = thread\r\n      $thread.append(renderThread(ctx))\r\n    })\r\n  }\r\n\r\n  return $thread\r\n}\r\n\r\nconst fn = {\r\n  parser: require('./parser'),\r\n  updater: require('./updater'),\r\n}\r\n\r\n// 从页面加载内容，并渲染到根元素\r\nfunction fromPage(page = conf.wgPageName, target = '#mw-content-text') {\r\n  actionGet(page).then(\r\n    (data) => {\r\n      log('成功从 API 获取源代码', page)\r\n      var forumEl = fromApi(data)\r\n      toPage({ forumEl, target })\r\n    },\r\n    (err) => {\r\n      error('从 API 获取源代码失败', { page, err })\r\n    }\r\n  )\r\n}\r\n\r\n// 渲染返回HTML对象\r\nfunction toHtml(forumEl) {\r\n  log('渲染并返回 HTML')\r\n  mw.hook('WikiForum.theme').fire((theme) => {\r\n    return renderAllForums({ forumEl, theme })\r\n  })\r\n}\r\n\r\n/**\r\n * @module toPage 从 WikiForum-Element 渲染到根元素\r\n * @param {Object} forumEl WikiForum-Element\r\n * @param {String|Element} target 渲染的根元素\r\n */\r\nfunction toPage({ forumEl, target = '#mw-content-text' }) {\r\n  log('准备渲染到页面，等待主题文件……')\r\n  /**\r\n   * 触发主题函数\r\n   * @param {Functon} theme 返回的主题渲染器\r\n   */\r\n  hook('WikiForum.theme').fire((theme) => {\r\n    const $root = $(target)\r\n    $root.html(renderAllForums({ forumEl, theme, $root }))\r\n    log('页面渲染完毕')\r\n    hook('WikiForum.renderer').fire()\r\n  })\r\n}\r\n\r\nmodule.exports = {\r\n  toPage,\r\n  toHtml,\r\n  fromPage,\r\n  getContent,\r\n  getMeta,\r\n}\r\n","const { conf } = require('./mw')\r\nconst { log, error } = require('./log')\r\nconst actionEdit = require('./actionEdit')\r\n\r\n/**\r\n * @module updater 更新器\r\n *\r\n * @description\r\n * 为了避免老版本jQuery的XSS漏洞\r\n * forumEl->wikitext的过程采用String拼接的方式\r\n */\r\n\r\n/**\r\n * @function contentValidator 检查字符串的HTML标签是否匹配，wikitext是否闭合\r\n * @param {String} str\r\n */\r\nfunction contentValidator(str) {\r\n  // Trying to fix wikitext\r\n  var openTable = (str.match(/\\{\\|/g) || []).length\r\n  var closeTable = (str.match(/\\n\\|\\}/g) || []).length\r\n\r\n  for (let i = 0; i < openTable - closeTable; i++) {\r\n    str += '\\n|}'\r\n  }\r\n\r\n  // fix HTML\r\n  const div = document.createElement('container')\r\n  div.innerHTML = str\r\n  str = div.innerHTML\r\n  return str\r\n}\r\n\r\n/**\r\n * @function handleEdit 处理forumEl并发布\r\n * @param {Object} forumEl\r\n */\r\nfunction handleEdit({ $root, forumEl, summary }) {\r\n  const pageName = forumEl[0].meta.pageName\r\n  const wikitext = parseAllForums(forumEl)\r\n\r\n  actionEdit({\r\n    title: pageName,\r\n    text: wikitext,\r\n    summary,\r\n  }).then(\r\n    ret => {\r\n      if (ret.error || ret.errors) {\r\n        error(ret.error || ret.errors)\r\n        return\r\n      }\r\n      log('更新论坛成功', ret)\r\n      const { fromPage } = require('./renderer')\r\n      fromPage(pageName, $root)\r\n    },\r\n    err => error(err)\r\n  )\r\n}\r\n\r\n/**\r\n * @function parseAllForums\r\n */\r\nfunction parseAllForums(forumEl) {\r\n  var html = ''\r\n  $.each(forumEl, (index, forum) => {\r\n    html += parseForum(forum)\r\n  })\r\n\r\n  html = `<!--\r\n - WikiForum Container\r\n - \r\n - Total Forums: ${forumEl.length}\r\n - Last modiflied: ${timeStamp()}\r\n - Last user: ${conf.wgUserName}\r\n -\r\n - DO NOT EDIT DIRECTLY\r\n -->\r\n${html}\r\n\r\n<!-- end WikiForum -->`\r\n\r\n  return html\r\n}\r\n\r\nfunction parseForum(forum) {\r\n  const { forumid, meta, threads } = forum\r\n  const metaList = getMeta(meta)\r\n\r\n  var threadList = ''\r\n  $.each(threads, (index, thread) => {\r\n    threadList += parseThread(thread)\r\n  })\r\n\r\n  const html = `\r\n<!-- start forum#${forumid || 'latest'} -->\r\n<div class=\"wiki-forum\" ${metaList}>\r\n${threadList}\r\n</div>\r\n<!-- end forum#${forumid || 'latest'} -->`\r\n\r\n  return html\r\n}\r\n\r\nfunction parseThread(thread, indent = 0) {\r\n  const { threadid, meta, threads, content } = thread\r\n  const metaList = getMeta(meta)\r\n\r\n  var indentStr = ''\r\n  for (let i = 0; i < indent; i++) indentStr += '  '\r\n\r\n  var reply = ''\r\n  if (threads && threads.length > 0) {\r\n    $.each(threads, (index, thread) => {\r\n      reply += parseThread(thread, indent + 1)\r\n    })\r\n  }\r\n\r\n  var html = `\r\n${indentStr}<!-- start thread#${threadid || 'latest'} -->\r\n${indentStr}<ul class=\"forum-thread\" ${metaList}>\r\n${indentStr}  <li class=\"forum-content\">\r\n<!-- start content -->\r\n${contentValidator(content)}\r\n<!-- end content -->\r\n${indentStr}  </li>${reply}\r\n${indentStr}</ul>\r\n${indentStr}<!-- end thread#${threadid || 'latest'} -->\r\n`\r\n\r\n  return html\r\n}\r\n\r\n/**\r\n * @function getMeta 将meta转换为 data-*=\"\" 字符串\r\n * @param {Object} meta jQuery.data()\r\n */\r\nfunction getMeta(meta) {\r\n  // 将 fooBar 转换为 foo-bar 的形式\r\n  var metaList = []\r\n\r\n  $.each(meta, (key, val) => {\r\n    let newKey =\r\n      'data-' + key.replace(/(.*)([A-Z])(.*)/g, '$1-$2$3').toLowerCase()\r\n    metaList.push(`${newKey}=\"${val}\"`)\r\n  })\r\n\r\n  // 确保data的顺序是固定的\r\n  var metaList1 = {}\r\n  var metaListKeys = Object.keys(meta).sort()\r\n  for (let key of metaListKeys) {\r\n    metaList1[key] = metaList[key]\r\n  }\r\n  metaList = metaList1\r\n\r\n  metaList = metaList.join(' ')\r\n\r\n  return metaList\r\n}\r\n\r\nfunction timeStamp() {\r\n  return new Date().toISOString()\r\n}\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nfunction isComplex(id, depthMax) {\r\n  id = id.split('-')\r\n  if (id.length > depthMax) return true\r\n  return false\r\n}\r\n\r\n/**\r\n * @function updateThread 编辑内容\r\n */\r\nfunction updateThread({\r\n  forumEl,\r\n  forumid = '1',\r\n  threadid,\r\n  content,\r\n  meta = {},\r\n  $root,\r\n}) {\r\n  const { wikitext } = forumEl\r\n  // 将 id 调整为程序可读的 index\r\n  forumid = Number(forumid)\r\n  forumid--\r\n  const forum = wikitext[forumid]\r\n\r\n  function findAndUpdate({ threadid, content, meta = {} }, base) {\r\n    var allThreads = base.threads\r\n    $.each(allThreads, (index, item) => {\r\n      if (item.threadid === threadid) {\r\n        if (content) {\r\n          item.content = content\r\n          item.meta.userLast = conf.wgUserName\r\n          item.meta.timeModify = timeStamp()\r\n        }\r\n        if (meta) {\r\n          item.meta = $.extend({}, item.meta, meta)\r\n        }\r\n      } else if (item.threads) {\r\n        findAndUpdate({ threadid, content }, item)\r\n      }\r\n    })\r\n  }\r\n\r\n  findAndUpdate({ threadid, meta, content }, forum)\r\n\r\n  log('Update thread', { forumid, threadid, content })\r\n  handleEdit({\r\n    $root,\r\n    forumEl: wikitext,\r\n    summary: `[WikiForum] Modify forum#${forumid} > thread#${threadid}`,\r\n  })\r\n}\r\n\r\n/**\r\n * @function addThread 盖新楼，回复楼主\r\n */\r\nfunction addThread({ forumEl, forumid, content, $root }) {\r\n  const { wikitext } = forumEl\r\n  forumid = Number(forumid)\r\n  forumid--\r\n\r\n  wikitext[forumid].threads.push({\r\n    meta: {\r\n      userAuthor: conf.wgUserName,\r\n      userLast: conf.wgUserName,\r\n      timePublish: timeStamp(),\r\n      timeModify: timeStamp(),\r\n    },\r\n    content,\r\n  })\r\n\r\n  log('Add thread', { forumid, content })\r\n\r\n  handleEdit({\r\n    $root,\r\n    forumEl: wikitext,\r\n    summary: `[WikiForum] Add thread to forum#${forumid}`,\r\n  })\r\n}\r\n\r\n/**\r\n * @function addReply 新回复，回复层主\r\n */\r\nfunction addReply({ forumEl, forumid = '1', threadid, content, $root }) {\r\n  const { wikitext } = forumEl\r\n  // 给楼主回复其实就是盖新楼\r\n  if (threadid === '1') {\r\n    return addThread({ forumEl, forumid, content })\r\n  }\r\n\r\n  forumid = Number(forumid)\r\n  forumid--\r\n\r\n  const forum = wikitext[forumid]\r\n\r\n  function findAndUpdate({ threadid, content }, base) {\r\n    var allThreads = base.threads\r\n    $.each(allThreads, (index, item) => {\r\n      if (item.threadid === threadid) {\r\n        item.threads = item.threads || []\r\n        item.threads.push({\r\n          meta: {\r\n            userAuthor: conf.wgUserName,\r\n            userLast: conf.wgUserName,\r\n            timePublish: timeStamp(),\r\n            timeModify: timeStamp(),\r\n          },\r\n          content,\r\n        })\r\n      } else if (item.threads) {\r\n        findAndUpdate({ threadid, content }, item)\r\n      }\r\n    })\r\n  }\r\n\r\n  findAndUpdate({ threadid, content }, forum)\r\n\r\n  log('Add reply', { forumid, threadid, content })\r\n\r\n  handleEdit({\r\n    $root,\r\n    forumEl: wikitext,\r\n    summary: `[WikiForum] Add reply to forum#${forumid} > thread#${threadid}`,\r\n  })\r\n}\r\n\r\nmodule.exports = {\r\n  addReply,\r\n  newReply: addReply,\r\n  addThread,\r\n  newThread: addThread,\r\n  updateThread,\r\n  // deleteThread,\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\r\n * @name WikiForum.core\r\n * @author 机智的小鱼君 <dragon-fish@qq.com>\r\n * @url https://github.com/Wjghj-Project/Gadget-WikiForum\r\n */\r\n'use strict'\r\n\r\nconst log = require('./module/log')\r\nconst { hook } = require('./module/mw')\r\n\r\nmw.loader.using(\r\n  ['mediawiki.api', 'mediawiki.util', 'mediawiki.user'],\r\n  function () {\r\n    // init global variable\r\n    const Core = {\r\n      parser: require('./module/parser'),\r\n      renderer: require('./module/renderer'),\r\n      updater: require('./module/updater'),\r\n    }\r\n\r\n    window.WikiForum = $.extend({}, window.WikiForum, Core)\r\n    hook('WikiForum').fire(Core)\r\n    log.log('Ready!')\r\n  }\r\n)\r\n"],"sourceRoot":""}